#pragma once

#include "Matrix.h"

class Vector3D;

class Point3D{
public:
	Point3D();
	Point3D(double _x,double _y,double _z);
	Point3D(const Point3D& p);

	~Point3D();


	double distance(const Point3D& p)const;

	double d_squared(const Point3D& p)const;

	Point3D& operator=(const Point3D& p);

	Point3D	operator-(const Vector3D& v)const;

	Point3D operator+(const Vector3D& v)const;

	Vector3D operator-(const Point3D& p)const;

public:
	double x,y,z;
};

inline Point3D& Point3D::operator=(const Point3D& p)
{
	x = p.x;
	y = p.y;
	z = p.z;

	return (*this);
}




Point3D operator* (const Matrix& mat, const Point3D& p);